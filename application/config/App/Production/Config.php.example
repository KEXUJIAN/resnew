<?php
namespace Res\Config\Development;

use \Res\Config\BaseConfig;

/**
* Development Config
*/
class Config extends BaseConfig
{
    /**
     * --------------------------------------------------------------------------
     * Database configuration
     * --------------------------------------------------------------------------
     *
     * @used by \Res\Util\DataBase
     * @var array
     */
    protected $db = [
        'dsn'  => 'dsn',
        'db'   => 'resmanager',
        'user' => 'user name',
        'pass' => 'user password',
    ];

    /**
    * --------------------------------------------------------------------------
    * Email configuration
    * --------------------------------------------------------------------------
    * @used by \Res\Util\Email
    * @var array
    *
    * protocol  邮件发送协议
    * smtp_host SMTP 服务器地址
    * smtp_user SMTP 用户名
    * smtp_pass SMTP 密码
    * charset   字符集
    * crlf      换行符
    * newline   换行符
    *
    */
    protected $mail = [
        'protocol'  => '',
        'smtp_host' => '',
        'smtp_user' => '',
        'smtp_pass' => '',
        'charset'   => 'utf-8',
        'crlf'      => "\r\n",
        'newline'   => '',
        'from'      => '',
        'from_name' => '',
    ];

    /**
             * --------------------------------------------------------------------------
             * permission configuration
             * --------------------------------------------------------------------------
             *
             * @used by \Res\Util\Limit
             * @var array
             *
             * [
             *   'uri' => role:array
             * ]
             * uri => controller[/method]
             * 会作为正则表达式对请求进行权限验证, 转换成 "#^controller[/method]#", 靠前的规则优先级高
             * 没有设置规则的 uri 默认不做权限控制
             * role => [role1, role2, ... , ]
             * 你用来作为权限控制的角色表达式, 未登录用户设为 NO_AUTH, 所有登录的用户默认会拥有 AUTH 权限
             *
             * eg: [
             * 'user/login' => ['NO_AUTH'], // user/login 只允许未登录的用户访问
             * 'user/logout' => [0, 1] OR 'logout' => ['admin', 'staff'], // user/logout 只允许权限表达式为 0, 1 或 'admin', 'staff' 的用户访问
             * 'user/edit' => [0] // user/edit 只允许权限表达式为 0 的用户访问
             * 'user' => ['AUTH'] // 剩下所有的 User 控制器中的方法所有登录的人可访问
             * ]
             */

            protected $permission = [
                'controller[/method]' => [role1, role2, ...,],
            ];
}
